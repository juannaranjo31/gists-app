{"version":3,"sources":["helpers/getGists.js","components/GistsGridItem.js","components/GistsGrid.js","hooks/useFetchGists.js","GistApp.js","index.js"],"names":["getGists","username","a","url","fetch","resp","json","data","GistsGridItem","description","file","language","className","href","target","style","backgroundColor","GistsGrid","React","memo","useState","loading","state","setState","useEffect","then","gists","useFetchGists","user","length","map","html_url","files","id","filename","Object","values","GistApp","setUser","initialValues","onSubmit","document","querySelector","value","name","placeholder","autoComplete","type","onClick","ReactDOM","render","getElementById"],"mappings":"2NACaA,EAAQ,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAEdC,EAFc,uCAEwBF,EAFxB,mBAGDG,MAAMD,GAHL,cAGdE,EAHc,gBAIDA,EAAKC,OAJJ,cAIdC,EAJc,yBAMbA,GANa,2CAAH,sD,OCCRC,EAAgB,SAAC,GAA6D,IAAD,IAA1DC,mBAA0D,MAA5C,GAA4C,MAAxCC,YAAwC,MAAjC,GAAiC,MAA7BP,WAA6B,MAAvB,GAAuB,MAAnBQ,gBAAmB,MAAR,GAAQ,EAUtF,OARKF,IACDA,EAAc,iBAGbE,IACDA,EAAW,cAIX,sBAAKC,UAAU,YAAf,UACI,sBAAKA,UAAU,cAAf,UACI,+BAAOH,IACP,sBAAKG,UAAU,QAAf,UACI,+CACA,mBAAGC,KAAMV,EAAKW,OAAO,UAArB,SAAgC,mBAAGF,UAAU,6BAIrD,uBAEA,sBAAKA,UAAU,QAAf,UACA,uCACA,oBAAGA,UAAU,cAAb,cAA4B,qCAAQF,EAAR,OAA5B,OACA,uBAAME,UAAU,WAAWG,MAAO,CAC9BC,gBAA8B,eAAbL,GAA6B,WADlD,cAEKA,EAFL,cCtBCM,EAAYC,IAAMC,MAAK,YAAe,IAE/C,ECHyB,SAAClB,GAE1B,MAA0BmB,mBAAS,CAC/Bb,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WAENxB,EAASC,GACRwB,MAAK,SAACC,GAAD,OAAWH,EAAS,CACtBhB,KAAMmB,EACNL,SAAS,SAId,CAACpB,IAEGqB,EDfiBK,CAFsB,EAAXC,MAE5BrB,EAAP,EAAOA,KAAMc,EAAb,EAAaA,QAEb,OACI,qBAAKT,UAAU,aAAf,SAEwB,IAAhBL,EAAKsB,OAAiBR,EAAU,2CAAmB,6EAInDd,EAAKuB,KAAK,YAAyC,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,MAAOvB,EAAqB,EAArBA,YAAawB,EAAQ,EAARA,GAChCC,EAAWC,OAAOC,OAAOJ,GAAO,GAAGE,SACnCvB,EAAWwB,OAAOC,OAAOJ,GAAO,GAAGrB,SACzC,OAAO,cAAC,EAAD,CAAeF,YAAaA,EAAaC,KAAMwB,EAAU/B,IAAK4B,EAAUpB,SAAUA,GAAesB,WEd/GI,EAAU,WAEnB,MAAwBjB,mBAAS,IAAjC,mBAAOQ,EAAP,KAAaU,EAAb,KAEA,OACI,qCACI,sBAAK1B,UAAU,MAAf,UAEI,cAAC,IAAD,CAAQ2B,cACJ,CACItC,SAAU,IAIduC,SACI,YAAmB,IAAhBvC,EAAe,EAAfA,SACCwC,SAASC,cAAc,cAAcC,MAAQ,GAC7CL,EAAQrC,IATpB,SAeI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOgC,GAAG,WAAWW,KAAK,WAAWC,YAAY,YAAYC,aAAa,QAC1E,wBAAQC,KAAK,SAASnC,UAAU,aAAhC,yBACA,wBAAQmC,KAAK,SAASnC,UAAU,YAAYoC,QAAU,WAAOP,SAASC,cAAc,cAAcC,MAAQ,IAA1G,0BAOR,mBAAG/B,UAAU,gBAAb,6BAIJ,uBAIa,KAATgB,EAEI,8BACI,cAACX,EAAD,CAAWW,KAAMA,MAQjB,iFCrDxBqB,IAASC,OACL,cAAC,EAAD,IACFT,SAASU,eAAe,W","file":"static/js/main.2c1ea17d.chunk.js","sourcesContent":["\r\nexport const getGists = async (username) => {\r\n    \r\n    const url = `https://api.github.com/users/${username}/gists`;\r\n    const resp = await fetch(url);\r\n    const data = await resp.json();\r\n\r\n    return data;\r\n\r\n    \r\n\r\n\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const GistsGridItem = ({ description = '', file = '', url = '', language = ''}) => {\r\n\r\n    if (!description) {\r\n        description = 'Untitled gist';\r\n    }\r\n\r\n    if (!language) {\r\n        language = 'Plain Text';\r\n    }\r\n\r\n    return (\r\n        <div className=\"gist-card\">\r\n            <div className=\"description\">\r\n                <span>{description}</span>\r\n                <div className=\"forks\">\r\n                    <button>Open Fork</button>\r\n                    <a href={url} target=\"__blank\" ><i className=\"fas fa-paperclip\"></i></a>\r\n                </div>\r\n            </div>\r\n\r\n            <hr/>\r\n\r\n            <div className=\"files\">\r\n            <h4>Files</h4>\r\n            <i className=\"fas fa-file\"> <span> {file} </span> </i>\r\n            <span className=\"language\" style={{\r\n                backgroundColor: language === 'JavaScript' && '#FF5050'\r\n            }}> {language} </span>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGists } from '../hooks/useFetchGists';\r\nimport { GistsGridItem } from './GistsGridItem';\r\n\r\n\r\nexport const GistsGrid = React.memo(( {user} ) => {\r\n\r\n    const {data, loading} = useFetchGists(user);\r\n\r\n    return (\r\n        <div className=\"gists-grid\">\r\n            {\r\n                data.length === 0 ? ( loading ? <p>Loading...</p>: <p>No gists found. Try searching by a username.</p>)\r\n                \r\n                :\r\n        \r\n                data.map( ({html_url, files, description, id}) => {\r\n                    const filename = Object.values(files)[0].filename;\r\n                    const language = Object.values(files)[0].language;\r\n                    return <GistsGridItem description={description} file={filename} url={html_url} language={language} key={id} />;\r\n                })\r\n            }\r\n\r\n            \r\n        </div>\r\n    )\r\n})\r\n","import { useEffect, useState } from 'react'\r\nimport { getGists } from '../helpers/getGists';\r\n\r\n\r\nexport const useFetchGists = (username) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGists(username)\r\n        .then((gists) => setState({\r\n            data: gists,\r\n            loading: false\r\n        }));\r\n\r\n        \r\n    }, [username])\r\n\r\n    return state;\r\n\r\n}\r\n","import { Formik, Form, Field } from 'formik';\r\nimport React, { useState } from 'react'\r\nimport { GistsGrid } from './components/GistsGrid';\r\n\r\n\r\nexport const GistApp = () => {\r\n\r\n    const [user, setUser] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <div className=\"app\">\r\n\r\n                <Formik initialValues={\r\n                    {\r\n                        username: ''\r\n                    }\r\n                }\r\n\r\n                    onSubmit={\r\n                        ({ username }) => {\r\n                            document.querySelector('form input').value = '';\r\n                            setUser(username);\r\n\r\n                        }\r\n                    }\r\n                >\r\n\r\n                    <Form>\r\n\r\n                        <Field id=\"username\" name=\"username\" placeholder=\"User name\" autoComplete=\"off\" />\r\n                        <button type=\"submit\" className=\"btn-submit\"> Get Gists </button>\r\n                        <button type=\"button\" className=\"btn-reset\" onClick={ () => {document.querySelector('form input').value = '';} } > Reset </button>\r\n\r\n                    </Form>\r\n\r\n\r\n                </Formik>\r\n\r\n                <i className=\"fab fa-github\">GitHub Gists</i>\r\n\r\n            </div>\r\n            \r\n            <hr />\r\n\r\n            {\r\n                //if\r\n                user !== '' ? (\r\n\r\n                    <div>\r\n                        <GistsGrid user={user} />\r\n                    </div>\r\n\r\n                )\r\n\r\n                    //else\r\n                    :\r\n                    (\r\n                        <p>No gists found. Try searching by a username.</p>\r\n                    )\r\n\r\n\r\n\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GistApp } from './GistApp';\n\nReactDOM.render(\n    <GistApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}